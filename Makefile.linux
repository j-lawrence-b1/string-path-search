SHELL          = /bin/bash
PYTHON         = python
VENV_NAME      = venv-linux
VENV_ROOT      = /home/$$USER/miniconda3
VENV_PATH      = ${VENV_ROOT}/envs/${VENV_NAME}
PROJECT_ROOT   = $(shell pwd)
DIST           = ${PROJECT_ROOT}/dist
TEMP           = ${PROJECT_ROOT}/tests/temp
BUILD          = ${PROJECT_ROOT}/build
OUT_DIR        = ${PROJECT_ROOT}/temp
EGG_INFO       = ${PROJECT_ROOT}/string_path_search.egg-info
MAKEFILE_LIST  = ${PROJECT_ROOT}/Makefile.linux
CONDA_INIT     = source ${VENV_ROOT}/etc/profile.d/conda.sh

.PHONY: help conda clean clean-venv install-packages test

default:test

help: ## Show this help message.
	@echo 'usage: make [target] ...'
	@echo
	@echo 'targets:'
	@egrep  '^(.+):(.*) ## (.+)' ${MAKEFILE_LIST} | grep -v egrep | sed 's/:.*##/: ##/' | column -t -c 2 -s ':#'

real-clean:clean-venv clean ## In addition to the regular clean, cleanup the python virtual environment.

clean: ## cleanup build and distribution products
	@for dir in ${BUILD} ${DIST} ${EGG_INFO}; do \
    if [ -d "$$dir" ]; then \
		  echo "cleaning up $$dir"; \
		  rm -r "$$dir"; \
    fi; \
	done

conda:
	@($(CONDA_INIT); if [ ! -x "${CONDA_EXE}" ]; then \
		echo "ERROR: Miniconda is not installed. Cannot continue"; \
		exit 1; \
	fi)

clean-venv:conda ## Cleanup this project's Python virtual environment
	@($(CONDA_INIT); if [ -d ${VENV_PATH} ]; then \
		conda env remove --name ${VENV_NAME}; \
    fi)

venv: ## Setup a Python virtual environment for this project.
	($(CONDA_INIT); if [ ! -d ${VENV_PATH} ]; then \
		${CONDA_EXE} env create -f environment.yml; \
	fi)

install:venv ## Run setup.py build and install
	($(CONDA_INIT); conda activate ${VENV_NAME}; ${PYTHON} setup.py install)

test:install ## Use nose2 to run the test scripts.
	($(CONDA_INIT); conda activate ${VENV_NAME}; ${PYTHON} -m pytest --ignore tests/data --verbose)
